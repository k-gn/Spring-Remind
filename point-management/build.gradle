plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// QueryDSL 라이브러리
	implementation 'com.querydsl:querydsl-core'
	// QueryDSL JPA 라이브러리
	implementation 'com.querydsl:querydsl-jpa'
	// QueryDSL 관련된 쿼리 타입(QClass)을 생성할 때 필요한 라이브러리로, annotationProcessor을 사용하여 추가
	annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
	// java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 시 추가
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	// java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	testRuntimeOnly'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// clean task를 실행 시 QClass를 삭제
clean {
	// QClass가 생성되는 위치
	delete file('src/main/generated')
}